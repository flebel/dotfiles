function b64_decode() {
  echo "$1" | base64 --decode
}

function b64_encode() {
  echo "$1" | base64
}

function extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar vxjf $1     ;;
      *.tar.gz)    tar vxzf $1     ;;
      *.bz2)       bunzip2 -v $1     ;;
      *.rar)       unrar ve $1     ;;
      *.gz)        gunzip -v $1      ;;
      *.tar)       tar vxf $1      ;;
      *.tbz2)      tar vxjf $1     ;;
      *.tgz)       tar vxzf $1     ;;
      *.zip)       unzip -v $1       ;;
      *.Z)         uncompress -v $1  ;;
      *.7z)        7z x $1        ;;
      *)     echo "'$1' cannot be extracted via extract()" ;;
       esac
   else
       echo "'$1' is not a valid file"
   fi
}

# fd - cd to selected directory
function fd() {
  local dir
  dir=$(find ${1:-*} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
function fe() {
  local file
  file=$(fzf --query="$1" --select-1 --exit-0)
  [ -n "$file" ] && ${EDITOR:-vim} "$file"
}

function mcd() {
  mkdir -p "$1" && cd "$1"
}

function parse_url_json()
{
  curl -s "$@" | python -mjson.tool
}

function ppgrep() {
  if [[ $1 == "" ]]; then
    PERCOL=percol
  else
    PERCOL="percol --query $1"
  fi
  ps aux | eval $PERCOL | awk '{ print $2 }'
}

function ppkill() {
  if [[ $1 =~ "^-" ]]; then
    QUERY=""            # options only
  else
    QUERY=$1            # with a query
    [[ $# > 0 ]] && shift
  fi
  ppgrep $QUERY | xargs kill $*
}

alias vi='vim'
# Open a file in vim at a given line number after `grep -nr`
# Supports multiple line numbers, e.g. after multiple piped `grep`
function v()
{
  unset filename
  unset line
  echo $1 | tr : '\n' | \
    while read e;
    do
      if [[ ! $filename = "" ]]
      then
        line=$e
        break
      fi
      if ! [[ $e =~ ^-?[0-9]+$ ]]
      then
        filename=$e
      fi
    done
  vim +:"$line" "$filename"
}

function ssl_cert() {
  command openssl s_client -connect "${1}"
}

function whois() {
  command whois "domain ${1}"
}

function ccyt() {
  curl -H "Content-Type: application/json" \
    http://192.168.1.103:8008/apps/YouTube \
    -X POST \
    -d "v=$1";
}

function ytsearch() {
  curl -s https://www.youtube.com/results\?search_query\=$@ | \
  grep -o 'watch?v=[^"]*"[^>]*title="[^"]*' | \
  sed -e 's/^watch\?v=\([^"]*\)".*title="\(.*\)/\1 \2/g'
}

alias bc="bc -l"
alias c="clear"
alias dc="docker-compose"
alias gg="PAGER=cat git grep"
alias gs="git s"
alias gti="git"
alias gits="git s"

alias greo=grep

alias f=find
alias h=head
alias l=less
alias j=jobs
alias t=tail
alias ccat="pygmentize -g"
alias listwincrlf="grep -IUr --color '' .| less"

alias dtest="python -m doctest -v"
alias httpserv="python -m SimpleHTTPServer"
alias smtpserv="python -m smtpd -n -c DebuggingServer localhost:2525"

alias stripexif="exiftool -all="

# Replace 'lp' by the frequently used 'git lp'
alias lp="git lp"

alias lb="(usblamp -d 1000 blue blue white blue white blue white blue &)"
alias lg="(usblamp -d 1000 green green white green white green white green &)"
alias lo="(usblamp off &)"
alias lr="(usblamp -d 1000 red red white red white red white red &)"

function termcolors() {
  for i in {0..255}; do
    printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
  done
}

alias ip="ipython"
alias msp="./manage.py shell_plus"

alias x509text="openssl x509 -inform PEM -text -in"
alias testkeypassphrase="openssl rsa -check -noout -in"
alias winfileendings="grep -IUr '' .|cat"

